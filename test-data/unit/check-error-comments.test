[case noErrorComment]
x: int = 1

[case prototypicalErrorComment]
x: int = "hi" # E: Incompatible types in assignment (expression has type "str", variable has type "int")

[case emptyLineErrorComment-xfail]
# E:

[case oddErrorComments]
x: int = "hi"#E: Incompatible types in assignment (expression has type "str", variable has type "int")
x2: int = "hi" #E: Incompatible types in assignment (expression has type "str", variable has type "int")
x3: int = "hi" # E: Incompatible types in assignment (expression has type "str", variable has type "int")
x4: int = "hi" # E : Incompatible types in assignment (expression has type "str", variable has type "int")
x5: int = "hi" # E  : Incompatible types in assignment (expression has type "str", variable has type "int")
x6: int = "hi" #  E  : Incompatible types in assignment (expression has type "str", variable has type "int")
x7: int = "hi"  #  E  : Incompatible types in assignment (expression has type "str", variable has type "int")
x8: int = "hi" \
 #  E  : Incompatible types in assignment (expression has type "str", variable has type "int")
x82: int = "hi"\
#  E  : Incompatible types in assignment (expression has type "str", variable has type "int")

[case oddErrorCommentsNoteComment]
n: int
reveal_type(n)  #  N: Revealed type is "builtins.int"


[case oddErrorCommentsThatDontWork-xfail]
-- The space between the ":" and the message actually differs in the output, which we match against
-- so we can't just parse it and replace it; therefore, these do not work.
x: int = "hi"#E:Incompatible types in assignment (expression has type "str", variable has type "int")
x2: int = "hi" #E:Incompatible types in assignment (expression has type "str", variable has type "int")
x3: int = "hi" # E  :  Incompatible types in assignment (expression has type "str", variable has type "int")
x4: int = "hi" #  E  :  Incompatible types in assignment (expression has type "str", variable has type "int")
x5: int = "hi"  #  E  :  Incompatible types in assignment (expression has type "str", variable has type "int")

[case oddErrorCommentsThatDontWorkCase-xfail]
-- I just didn't bother to implement these.
x: int = "hi" # e: Incompatible types in assignment (expression has type "str", variable has type "int")
x: int = "hi" # w: Incompatible types in assignment (expression has type "str", variable has type "int")
x: int = "hi" # n: Incompatible types in assignment (expression has type "str", variable has type "int")


[case oddErrorCommentsThatDontWorkCaseAndNoColon-xfail]
-- I didn't implement these. This is veering towards the ambiguous.
x: int = "hi" # e: Incompatible types in assignment (expression has type "str", variable has type "int")
x2: int = "hi" # E Incompatible types in assignment (expression has type "str", variable has type "int")
x3: int = "hi" # e Incompatible types in assignment (expression has type "str", variable has type "int")
x4: int = "hi" # e Incompatible types in assignment (expression has type "str", variable has type "int")
